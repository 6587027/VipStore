import React, { useState, useContext } from 'react';
import { AuthContext } from '../../context/AuthContext';
import ChatModal from './ChatModal';
import './ChatButton.css';

const ChatButton = () => {
  const [isChatOpen, setIsChatOpen] = useState(false);
  const [unreadCount, setUnreadCount] = useState(0); // ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏≠‡πà‡∏≤‡∏ô
  const { user } = useContext(AuthContext);

  const handleChatToggle = () => {
    if (!user) {
      alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡πà‡∏≠‡∏ô‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÅ‡∏ä‡∏ó');
      return;
    }
    setIsChatOpen(!isChatOpen);
    
    // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏≠‡πà‡∏≤‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡∏¥‡∏î‡πÅ‡∏ä‡∏ó
    if (!isChatOpen) {
      setUnreadCount(0);
    }
  };

  return (
    <>
      {/* ‡∏õ‡∏∏‡πà‡∏°‡πÅ‡∏ä‡∏ó‡∏•‡∏≠‡∏¢‡∏Ç‡∏ß‡∏≤‡∏•‡πà‡∏≤‡∏á */}
      <div className="chat-button-container">
        <button 
          className={`chat-button ${isChatOpen ? 'active' : ''}`}
          onClick={handleChatToggle}
          title="‡πÅ‡∏ä‡∏ó‡∏Å‡∏±‡∏ö‡∏ó‡∏µ‡∏°‡∏™‡∏ô‡∏±‡∏ö‡∏™‡∏ô‡∏∏‡∏ô"
        >
          <div className="chat-icon">
            üí¨
          </div>
          
          {/* Badge ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏≠‡πà‡∏≤‡∏ô */}
          {unreadCount > 0 && (
            <div className="chat-badge">
              {unreadCount > 9 ? '9+' : unreadCount}
            </div>
          )}
          
          {/* ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå */}
          <div className="chat-status online"></div>
        </button>

        {/* ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥ */}
        {!isChatOpen && (
          <div className="chat-tooltip">
            üí¨ ‡πÅ‡∏ä‡∏ó‡∏Å‡∏±‡∏ö‡∏ó‡∏µ‡∏°‡∏™‡∏ô‡∏±‡∏ö‡∏™‡∏ô‡∏∏‡∏ô
            <div className="tooltip-arrow"></div>
          </div>
        )}
      </div>

      {/* Modal ‡πÅ‡∏ä‡∏ó */}
      {isChatOpen && (
        <ChatModal 
          isOpen={isChatOpen} 
          onClose={() => setIsChatOpen(false)}
          setUnreadCount={setUnreadCount}
        />
      )}
    </>
  );
};

export default ChatButton;