import React, { useState, useContext } from 'react';
import { AuthContext } from '../../context/AuthContext';
import './ChatModal.css';

const ChatModal = ({ isOpen, onClose, setUnreadCount }) => {
  const [message, setMessage] = useState('');
  const { user } = useContext(AuthContext);

  const handleSendMessage = () => {
    if (!message.trim()) return;
    
    // TODO: ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ú‡πà‡∏≤‡∏ô Socket.IO
    console.log('Send message:', message);
    setMessage('');
  };

  const handleKeyPress = (e) => {
    if (e.key === 'Enter' && !e.shiftKey) {
      e.preventDefault();
      handleSendMessage();
    }
  };

  if (!isOpen) return null;

  return (
    <div className="chat-modal-overlay">
      <div className="chat-modal">
        {/* Header */}
        <div className="chat-modal-header">
          <div className="chat-header-info">
            <h3>üí¨ ‡πÅ‡∏ä‡∏ó‡∏Å‡∏±‡∏ö‡∏ó‡∏µ‡∏°‡∏™‡∏ô‡∏±‡∏ö‡∏™‡∏ô‡∏∏‡∏ô</h3>
            <span className="support-status">üü¢ ‡∏ó‡∏µ‡∏°‡∏™‡∏ô‡∏±‡∏ö‡∏™‡∏ô‡∏∏‡∏ô‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå</span>
          </div>
          <button className="close-chat-btn" onClick={onClose}>
            ‚úï
          </button>
        </div>

        {/* Messages Area */}
        <div className="chat-messages-area">
          <div className="welcome-message">
            <div className="system-message">
              <div className="message-avatar">ü§ñ</div>
              <div className="message-content">
                <p><strong>‡∏£‡∏∞‡∏ö‡∏ö VipStore</strong></p>
                <p>‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡πà‡∏∞ {user?.firstName || user?.username}! ‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏ä‡∏ó</p>
                <p>‡∏ó‡∏µ‡∏°‡∏á‡∏≤‡∏ô‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏Ñ‡∏∏‡∏ì 24/7 üéØ</p>
                <small>‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏™‡∏±‡∏Å‡∏Ñ‡∏£‡∏π‡πà</small>
              </div>
            </div>
          </div>

          {/* Chat System Ready Message */}
          <div className="development-notice">
            <div className="notice-icon">üöß</div>
            <p><strong>‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏ä‡∏ó‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏û‡∏±‡∏í‡∏ô‡∏≤</strong></p>
            <small>Socket.IO ‡πÅ‡∏•‡∏∞ Real-time messaging ‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÉ‡∏ô‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ï‡πà‡∏≠‡πÑ‡∏õ</small>
          </div>
        </div>

        {/* Input Area */}
        <div className="chat-input-area">
          <div className="typing-indicator">
            {/* TODO: ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Ñ‡∏ô‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏û‡∏¥‡∏°‡∏û‡πå */}
          </div>
          
          <div className="message-input-container">
            <input
              type="text"
              value={message}
              onChange={(e) => setMessage(e.target.value)}
              onKeyPress={handleKeyPress}
              placeholder="‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì..."
              className="chat-message-input"
            />
            <button 
              className="send-message-btn"
              onClick={handleSendMessage}
              disabled={!message.trim()}
            >
              üì§
            </button>
          </div>
        </div>

        {/* Footer */}
        <div className="chat-modal-footer">
          <small>üí° ‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏° Enter ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° | Shift+Enter ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ç‡∏∂‡πâ‡∏ô‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡πÉ‡∏´‡∏°‡πà</small>
        </div>
      </div>
    </div>
  );
};

export default ChatModal;